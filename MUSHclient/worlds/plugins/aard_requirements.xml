<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<muclient>
<plugin
   name="Aardwolf_Package_Requirements"
   author="Fiendish"
   id="50f4e1fc89999ce02a216a3c"
   language="Lua"
   purpose="Manages Aardwolf package requirements"
   requires="5.05"
   save_state="y"
>
</plugin>


<aliases>
<alias
   match="^aard plugins default$"
   enabled="y"
   regexp="y"
   sequence="100"
   ignore_case="y"
   script="plugin_load_alias"
></alias>
</aliases>

<script>
<![CDATA[
require "checkplugin"


required_plugins = {
   {"162bba4a5ecef2bb32b5652f", "aard_package_update_checker"},
   {"abc1a0944ae4af7586ce88dc", "aard_repaint_buffer"},
   {"3e7dedbe37e44942dd46d264", "aard_GMCP_handler"},
   {"55616ea13339bc68e963e1f8", "aard_chat_echo"},
   {"04d9e64f835452b045b427a7", "aard_Copy_Colour_Codes"},
   {"60ad15b3cb2a5757d2611c28", "aard_help"},
   {"9f796334ab9ed476ef44f1dc", "aard_new_connection"}
}

required_visual_plugins = {
   {"462b665ecb569efbf261422f", "aard_miniwindow_z_order_monitor"},
   {"b9315e040989d3f81f4328d6", "aard_Theme_Controller"}
}

optional_visual_plugins = {
   {"b555825a4a5700c35fa80780", "aard_channels_fiendish"},
   {"c293f9e7f04dde889f65cb90", "aard_layout"},
   {"ef4a86dbc9cd4dd6f4c69385", "aard_health_bars_gmcp"},
   {"ef4a86dbc9cd4dd6f4c69386", "aard_statmon_gmcp"},
   {"f178e68512c685b3be1e9b07", "aard_group_monitor_gmcp"},
   {"3f498d929793c12cb70fb59e", "aard_ASCII_map"},
   {"60840c9013c7cc57777ae0ac", "Aardwolf_Bigmap_Graphical"},
   {"74524d1272786aaf04e9487d", "aard_splitscreen_scrollback"},
   {"a1965272c8ca966b76f36fa3", "aard_ingame_help_window"}
}

optional_vimode_plugins = {
   {"fefc7923b4db9e0ee3add286", "aard_VI_command_output"},
   {"6000a4c6f0e71d31fecf523d", "aard_vi_review_buffers"},
   {"463242566069ebfd1b379ec1", "universal_text_to_speech"}
}

other_optional_plugins = {
   {"23832d1089f727f5f34abad8", "aard_soundpack"},
   {"48f867c18f6ff1d6d3b52918", "aard_text_substitution"},
   {"1b55534e1fa021cf093aaa6d", "aard_prompt_fixer"},
   {"b14162092957e88ec16d99e7", "aard_keyboard_lockout"},
   {"0cbb10309587f0ee15ba78ce", "aard_inventory_serials"},
   {"b6eae87ccedd84f510b74714", "aard_GMCP_mapper"},
   {"d7b7347aefd339a96abb78b0", "aard_vital_shortcuts"},
   {"520bc4f29806f7af0017985f", "Hyperlink_URL2"}
}


function load_plugins(plugin_list)
   for _,v in ipairs(plugin_list) do
      do_plugin_check_now(v[1], v[2])
   end
end

function load_required_plugins()
   -- Load plugins which are necessary for the package to function.

   if IsPluginInstalled("9f796334ab9ed476ef44f1dd") then
      -- Remove the old version of the new connection plugins.
      UnloadPlugin("9f796334ab9ed476ef44f1dd")
   end

   load_plugins(required_plugins)

   require "aard_requirements"
   if not aard_req_novisuals_mode then
      load_plugins(required_visual_plugins)
   end
end

function load_optional_plugins()
   -- Load plugins which are considered sufficiently useful and stable to be
   -- included by default but may be removed.
   require "aard_requirements"
   if aard_req_novisuals_mode then
      load_plugins(optional_vimode_plugins)
   else
      load_plugins(optional_visual_plugins)
   end

   load_plugins(other_optional_plugins)
end


function plugin_load_alias(name, line, wildcards, styles)
   print("Loading any default plugins that aren't currently loaded")
   load_required_plugins()
   load_optional_plugins()
   print("Done loading default plugins")
end

function OnPluginListChanged()
   load_required_plugins()
end

function OnPluginInstall()
   fix_settings()
end

function OnPluginSaveState()
   fix_settings()
end

function OnPluginClose()
   fix_settings()
end

function fix_settings()
   -- Guarantee various useful world file settings
   SetOption("omit_date_from_save_files", 1)  -- slightly less clutter in settings files
   SetAlphaOption("terminal_identification", "MUSHclient-Aard") -- helps Lasher count for the 'clients' in-game command

   -- Convert settings that start with the MUSHclient folder path to relative paths
   local function relative_paths()
      local mushclient_path = GetInfo(66)
      local mpathlen = #mushclient_path
   
      for _, maybe_pathname in ipairs(GetAlphaOptionList()) do
         local maybe_path = tostring(GetAlphaOption(maybe_pathname))
         local new_path = (maybe_path:sub(0, mpathlen) == mushclient_path) and maybe_path:sub(mpathlen+1) or maybe_path
         if new_path ~= maybe_path then
            SetAlphaOption(maybe_pathname, new_path)
         end
      end
   
      local exec_lines = {}
      for _, maybe_pathname in ipairs(GetGlobalOptionList()) do
         local maybe_path = tostring(GetGlobalOption(maybe_pathname))
         local new_path = (maybe_path:sub(0, mpathlen) == mushclient_path) and maybe_path:sub(mpathlen+1) or maybe_path
         if new_path ~= maybe_path then
            table.insert(exec_lines, 'UPDATE prefs SET value = "'..new_path..'" WHERE name = "'..maybe_pathname..'"')
         end
      end
      return exec_lines
   end
   local exec_lines = relative_paths()

   -- Edit the preferences db to stop opening the activity window at startup
   if tonumber(GetGlobalOption("OpenActivityWindow")) ~= 0 then
      table.insert(exec_lines, 'UPDATE prefs SET value = 0 WHERE name = "OpenActivityWindow"')
   end

   update_prefs(exec_lines)
end

function update_prefs(exec_lines)
   if #exec_lines > 0 then
      local aard_req_prefs_db = sqlite3.open(GetInfo(82))
      for _,line in ipairs(exec_lines) do
         aard_req_prefs_db:exec(line)
      end
      aard_req_prefs_db:close()
      utils.reload_global_prefs()
   end
end

]]>
</script>
</muclient>
