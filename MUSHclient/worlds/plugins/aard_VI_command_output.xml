<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>

<muclient>
<plugin
   name="Aardwolf_Commands_To_Notepad"
   author="Fiendish"
   id="fefc7923b4db9e0ee3add286"
   language="Lua"
   purpose="Captures output from game commands and sends it to a MUSHclient notepad."
   date_written="2016-02-14"
   requires="4.70"
   version="1.0"
   save_state="y"
   sequence="100"
>

<description trim="y">
</description>

</plugin>
<aliases>
<alias
   script="capture_command_response"
   match="^mc command (.+)$"
   enabled="y"
   regexp="y"
   sequence="100"
   ignore_case="y"
>
</alias>
</aliases>

<script>
<![CDATA[
dofile(GetInfo(60).."telnet_options.lua")
require "wrapped_captures"
require "aardwolf_colors"

command_capture = "command output"
use_notepad = GetVariable("use_notepad")
if use_notepad == nil then
   use_notepad = true
else
   use_notepad = (use_notepad == "1")
end


require "checkplugin"
function OnPluginListChanged()
   -- do_plugin_check_now("dd10517422bc35b5131a3aa0", "VI_captures")
end

function capture_command_response(name, line, wildcards, styles)
   last_command = Trim(wildcards[1])
   Capture.untagged_output(last_command, true, true, true, write_to_notepad, true)
end



DATE_MONTHS = {Jan=1,Feb=2,Mar=3,Apr=4,May=5,Jun=6,Jul=7,Aug=8,Sep=9,Oct=10,Nov=11,Dec=12}
DATE_PATTERN = "(%d+) (%a+) (%d+):(%d+):(%d+)"
function aardwolf_channel_datestring_to_timestamp(date_string)
   local found_day, found_month, found_hour, found_minute, found_seconds = date_string:match(DATE_PATTERN)
   found_month = DATE_MONTHS[found_month]

   local date_now = os.date("*t")
   if date_now.month < found_month then
      found_year = found_year - 1
   else
      found_year = date_now.year
   end

   return(os.time({year = found_year, month = found_month, day = found_day, hour = found_hour, min = found_minute, sec = found_seconds}))
end

function write_to_notepad(style_lines)
   -- convert style lines to plain text and separate timestamps
   local messages = {}
   for _,styles in ipairs(style_lines) do
      local date_string = nil
      local line = strip_colours_from_styles(styles)
      line = line:gsub("^%[?(%d%d %u%l%l %d%d:%d%d:%d%d)%]? ?-? (.*)", function(a,b) date_string = a; return b end)
      table.insert(messages, {msg=line, date=date_string})
   end

   -- remove leading and trailing blank lines
   while #messages>0 and Trim(messages[1].msg) == "" do
      table.remove(messages, 1)
   end
   while #messages>0 and Trim(messages[#messages].msg) == "" do
      table.remove(messages, #messages)
   end

   if #messages == 0 then
      table.insert(messages, {msg="Failed to capture any MUD output. Are you sure this command goes to the MUD?", date=nil})
   end

   -- if use_notepad then
      local full_capture_string = ""
      for _,v in ipairs(messages) do
         full_capture_string = full_capture_string..v.msg.."\r\n"
      end
      ReplaceNotepad(command_capture,  "Captured output for command ["..last_command.."].\r\n"..full_capture_string.."End of capture.")

      NotepadSaveMethod(command_capture, 2)
      NotepadReadOnly(command_capture, true)
      ActivateNotepad(command_capture)
   -- else
   --    CallPlugin("dd10517422bc35b5131a3aa0", "remove_capture_internal", command_capture, true)
   --    CallPlugin("dd10517422bc35b5131a3aa0", "add_capture_if_new", command_capture, false, true, nil, false)
   --    CallPlugin("dd10517422bc35b5131a3aa0", "switch_to_capture", command_capture, true)
   --    CallPlugin("dd10517422bc35b5131a3aa0", "clear_capture", true)
   --    CallPlugin("dd10517422bc35b5131a3aa0", "stamp_and_store", command_capture, "Captured output for command ["..last_command.."].")

   --    for i,v in ipairs(messages) do
   --       CallPlugin("dd10517422bc35b5131a3aa0", "stamp_and_store", command_capture, v.msg, v.date and aardwolf_channel_datestring_to_timestamp(v.date) or nil)
   --    end

   --    CallPlugin("dd10517422bc35b5131a3aa0", "show", "Captured output from command ["..last_command.."] to ["..command_capture.."] capture.")
   --    CallPlugin("dd10517422bc35b5131a3aa0", "switch_to_capture", command_capture)
   -- end
end

]]>
</script>
</muclient>
