<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>

<muclient>
<plugin
   name="Aardwolf_New_Connection"
   author="Fiendish"
   id="9f796334ab9ed476ef44f1dc"
   language="Lua"
   purpose="Welcome players to the new client package"
   date_written="2010-11-22 18:32:06"
   requires="4.73"
   version="1.0"
   save_state="y"
>
</plugin>
<aliases>
<alias
   match="connect to aardwolf"
   enabled="y"
   sequence="100"
   omit_from_output="y"
   ignore_case="y"
   script="vi_close"
>
</alias>
</aliases>
<script>
<![CDATA[

require "movewindow"

local showGreeting2 = 1

-- font
FONT_NAME = "Verdana"
FONT_SIZE = 9
font_id = "f"
font_id_bold = "fb"
font_id_underline = "fu"

MAX_WIDTH = 500
GAP = 10
window_height = 400
window_width = 600

-- colours
WINDOW_BACKGROUND_COLOUR = ColourNameToRGB ("black")
WINDOW_TEXT_COLOUR = ColourNameToRGB ("white")

win = "zzzzz_" .. GetPluginID ()  -- get a unique name

function OnPluginSaveState ()
   SetVariable("showGreeting2", showGreeting2)
end -- OnPluginSaveState

loaded = false
function OnPluginListChanged()
   dofile "lua/aard_requirements.lua"
   if aard_req_novisuals_mode then
      LoadPlugin(GetPluginInfo(GetPluginID(), 20).."aard_new_connection_no_UI.xml")
      return
   end
   if not loaded then
      showGreeting2 = tonumber(GetVariable("showGreeting2")) or showGreeting2
      if (showGreeting2 == 1) then
         ShowGreeting(true)
      else
         Connect()
      end
   end
   loaded = true
end

function hyperlink_close ()
   WindowShow (win, false)
   SaveState()
   Connect()
end -- hyperlink_close

function vi_close()
   showGreeting2 = 0
   ShowGreeting(false)
   hyperlink_close()
end

function hyperlink_dont_show()
   if showGreeting2 == 1 then
      showGreeting2 = 0
   else
      showGreeting2 = 1
   end
   ShowGreeting(false)
end

function hyperlink_url(flags, hotspot_id, win)
   if bit.band (flags, miniwin.hotspot_got_rh_mouse) ~= 0 then
      right_click_url()
   else
      OpenBrowser("https://github.com/fiendish/aardwolfclientpackage/wiki")
   end
end

function right_click_url()
   result = WindowMenu(win,
      WindowInfo (win, 14),  -- x position
      WindowInfo (win, 15),
      "Copy url to clipboard")
   if result ~= "" then
      SetClipboard("https://github.com/fiendish/aardwolfclientpackage/wiki")
   end
end

function mouseover_url()
   WindowLine(win, GAP, url_bottom, GAP+url_width, url_bottom, 0xffffff, 512, 2)
   Redraw()
end

function mousecancel_url()
   WindowLine(win, GAP, url_bottom, GAP+url_width, url_bottom, 0x000000, 512, 2)
   Redraw()
end

function MouseUp(flags, hotspot_id, win)
   if bit.band (flags, miniwin.hotspot_got_rh_mouse) ~= 0 then
      right_click_menu()
   end
   return true
end

function LeftClickOnly(flags, hotspot_id, win)
   if bit.band (flags, miniwin.hotspot_got_rh_mouse) ~= 0 then
      return true
   end
   return false
end

-- right click menu
function right_click_menu ()
   menustring ="Hi there! Thanks for right-clicking!|-|This menu doesn't have anything important|>But OTHER plugins might let you do things like...|Change fonts|Customize colors|Or whatever else makes sense|-|>Or maybe the author just wants to send you a message|Like, \"Hi, I'm Avi.\"|<|<"

   result = WindowMenu (win,
      WindowInfo (win, 14),  -- x position
      WindowInfo (win, 15),   -- y position
      menustring) -- content
end -- right_click_menu

function ShowGreeting(firstTime, highlight_url)
   require "getlines"
   require "movewindow"

   -- left margin
   x = GAP
   -- top margin
   y = GAP

   if (firstTime) then

      Note("")
      Note("Screen reader users: The non-visual package version at https://fiendish.github.io/aardwolfclientpackage/ comes pre-configured for screen reader text to speech. This version does not. Otherwise, to bypass this welcome screen and connect to the game, type \"connect to aardwolf\" without the quotation marks.")
      Note("")

      -- make the window to get font info
      WindowCreate (win, 0, 0, 0, 0, -- very small
         miniwin.pos_center_all, 0,
         WINDOW_BACKGROUND_COLOUR)  -- create window

      local Charset = miniwin.font_charset_default
      local PitchAndFamily = miniwin.font_family_swiss + miniwin.font_pitch_variable

      -- grab fonts
      WindowFont (win, font_id,           FONT_NAME, FONT_SIZE, false, false, false, false, Charset, PitchAndFamily)
      WindowFont (win, font_id_bold,      FONT_NAME, FONT_SIZE, true,  false, false, false, Charset, PitchAndFamily )
      WindowFont (win, font_id_underline, FONT_NAME, FONT_SIZE, false, false, true,  false, Charset, PitchAndFamily)

      -- work out how high a font line is
      font_height = WindowFontInfo (win, font_id, 1)   -- height of the font
      line_height = font_height+1

      -- install the window movement handler, get back the window position
      windowinfo  = movewindow.install (win, miniwin.pos_center_all, 2, true, nil, {mouseup=MouseUp, mousedown=LeftClickOnly, dragmove=LeftClickOnly, dragrelease=LeftClickOnly})

      baselines = {"Welcome! There is now an online user guide for the Aardwolf Client Package! Click the link!","Here are a few helpful tips for navigating this software...","1) If the main text area is ever off the edge of your screen, type \"RESETAARD\" to reset it.","2) We use miniwindow dialogs (this is a miniwindow) to enhance your experience.", "Most miniwindows in this package let you do the following:", "3) The miniwindows are just 'plugins' and can be removed if you want by going to File->Plugins..."}
      tablines = {"* DRAG the bottom-right corner to resize. (where you see this) -->","* DRAG anywhere else in the miniwindow to move it around (try it here).","   There are exceptions. When you can't drag everywhere (e.g. the main text area),","   you can at least drag along the top where the mouse cursor changes.","* RIGHT-CLICK in the miniwindow to bring up a menu of options (try it here).","* You might also see things like ","   You can usually interact with them by clicking or just moving the mouse over them."}

      local max_width = 0
      for i,v in ipairs(baselines) do
         max_width = math.max(max_width, WindowTextWidth(win, font_id, v))
      end
      for i,v in ipairs(tablines) do
         max_width = math.max(max_width, 50+WindowTextWidth(win, font_id, v))
      end

      local never_show_text = "Check (click) this box before closing (top-right) to never show this dialog again --> "
      local text_width = WindowTextWidth(win, font_id, never_show_text)
      max_width = math.max(text_width, max_width)

      window_width = max_width + 2*GAP
      window_height = 26*line_height
      -- make the "real" window
      WindowCreate (win, 0, 0, window_width, window_height, miniwin.pos_center_all, 0,
                               WINDOW_BACKGROUND_COLOUR)  -- create window
      WindowSetZOrder(win, 99999)

      -- add the drag handler so they can move the window around
      movewindow.add_drag_handler (win, 0, 0, 0, 0)

      title = "Aardwolf MUSHclient Package: Getting Started"
      title_width = WindowTextWidth(win, font_id_bold, title)

      y = y + line_height*2

      WindowText (win, font_id, baselines[1], x, y, 0, 0, WINDOW_TEXT_COLOUR )
      y = y + line_height
      url_bottom = y+line_height
      url_width = WindowText (win, font_id, "https://github.com/fiendish/aardwolfclientpackage/wiki", x, y, 0, 0, WINDOW_TEXT_COLOUR )
      WindowAddHotspot(win, "url",
         x,
         y,
         x + url_width,
         url_bottom,
         "mouseover_url", "mousecancel_url", "", "",
         "hyperlink_url",  -- mouseup
         "Go to the online guide!",
         miniwin.cursor_hand, 0)  -- hand cursor

      y = y + line_height*1.5
      tx = WindowText (win, font_id, baselines[2], x, y, 0, 0, WINDOW_TEXT_COLOUR )
      y = y + line_height*1.5
      WindowText (win, font_id, baselines[3], x, y, 0, 0, WINDOW_TEXT_COLOUR )
      y = y + line_height*1.5
      WindowText (win, font_id, baselines[4], x, y, 0, 0, WINDOW_TEXT_COLOUR )
      y = y + line_height*1.5
      WindowText (win, font_id, baselines[5], x, y, 0, 0, WINDOW_TEXT_COLOUR)
      y = y + line_height
      x = x+50
      local mx = WindowText (win, font_id, tablines[1], x, y, 0, 0, WINDOW_TEXT_COLOUR) + x + 15
      my = y + line_height

      -- draw the resize widget
      WindowLine(win, mx-3, my-2, mx-2, my-3, 0xffffff, 0, 2)
      WindowLine(win, mx-4, my-2, mx-2, my-4, 0x696969, 0, 1)
      WindowLine(win, mx-6, my-2, mx-2, my-6, 0xffffff, 0, 2)
      WindowLine(win, mx-7, my-2, mx-2, my-7, 0x696969, 0, 1)
      WindowLine(win, mx-9, my-2, mx-2, my-9, 0xffffff, 0, 2)
      WindowLine(win, mx-10, my-2, mx-2, my-10, 0x696969, 0, 1)
      WindowLine(win, mx-12, my-2, mx-2, my-12, 0xffffff, 0, 2)
      WindowLine(win, mx-13, my-2, mx-2, my-13, 0x696969, 0, 1)

      y = y + line_height*1.5
      WindowText (win, font_id, tablines[2], x, y, 0, 0, WINDOW_TEXT_COLOUR)
      y = y + line_height
      WindowText (win, font_id, tablines[3], x, y, 0, 0, WINDOW_TEXT_COLOUR)
      y = y + line_height
      WindowText (win, font_id, tablines[4], x, y, 0, 0, WINDOW_TEXT_COLOUR)
      y = y + line_height*1.5
      WindowText (win, font_id, tablines[5], x, y, 0, 0, WINDOW_TEXT_COLOUR)

      y = y + line_height*1.5
      mx = WindowText (win, font_id, tablines[6], x, y, 0, 0, WINDOW_TEXT_COLOUR) + x

      -- show the widget for the legend popup
      qwidth = WindowTextWidth(win, font_id, "?")
      WindowRectOp(win, 2, mx, y, mx+3*qwidth,y+line_height,0x303030,0x0000ff) -- fill
      WindowRectOp(win, 1,mx, y, mx+3*qwidth,y+line_height,0x777777,0x0000ff) -- border
      WindowText (win, font_id, "?", mx+qwidth, y, 0, 0, 0xffffff)

      mx = WindowText (win, font_id, " or ", mx+3*qwidth, y, 0, 0, WINDOW_TEXT_COLOUR) + mx + 3*qwidth

      -- show the widget for mapper config
      WindowRectOp(win, 2, mx, y, mx+3*qwidth,y+line_height,0x303030,0x0000ff) -- fill
      WindowRectOp(win, 1,mx, y, mx+3*qwidth,y+line_height,0x777777,0x0000ff) -- border
      WindowText (win, font_id, "*", mx+qwidth, y, 0, 0, 0xffffff)
      mx = mx+3*qwidth
      y = y + line_height
      WindowText(win, font_id, tablines[7], x, y, 0, 0, WINDOW_TEXT_COLOUR)

      y = y + line_height*1.5
      WindowText (win, font_id, baselines[6], x-50, y, 0, 0, WINDOW_TEXT_COLOUR)

      -- frame the tips
      WindowRectOp(win, 1,GAP/2, line_height*6 + (GAP/2), window_width-(GAP/2),y+line_height+GAP/2,0x777777,0x0000ff) -- border

      y = y + line_height*2
      WindowText (win, font_id, "OK? Well, that's all for now. Have fun playing Aardwolf!", 20, y, 0, 0, WINDOW_TEXT_COLOUR)
      y = y + line_height

      WindowText(win, font_id, never_show_text, window_width-text_width - line_height - GAP, window_height-(2*line_height)+1 - GAP, 0, 0, 0xffffff)
      WindowText(win, font_id, "Screen reader users: type \"connect to aardwolf\" without quotation marks.", GAP, window_height-line_height+1 - GAP, 0, 0, 0xffffff)

      WindowResize(win, window_width, window_height, 0x000000)

      -- title box
      WindowRectOp (win, miniwin.rect_fill, 0, 0, 0, line_height+2*GAP-2, 0x333333)
      WindowLine (win, 0, line_height+GAP*2-2, window_width, line_height+2*GAP-2, 0xffffff, 0, 1)
      WindowText (win, font_id_bold, title, (window_width-title_width)/2, GAP, 0, 0, WINDOW_TEXT_COLOUR )

      -- frame it
      WindowRectOp (win, miniwin.rect_frame, 0, 0, 0, 0, 0xffffff )
      WindowRectOp (win, miniwin.rect_frame, 1, 1, -1, -1, 0x696969 )
   end

   -- work out how high a font line is
   font_height = WindowFontInfo (win, font_id, 1)   -- height of the font
   line_height = font_height+1

   local box_size = line_height - 2
   local box_colour = 0xffffff
   -- left margin
   x = GAP
   -- top margin
   y = GAP

   -- close box
   WindowRectOp (win, miniwin.rect_frame,
      x + window_width - box_size - GAP * 2,
      y,
      x + window_width - GAP * 2,
      y + box_size,
      box_colour)
   WindowLine (win, x + window_width - box_size - GAP * 2 + 3,
      y + 3,
      x + window_width - GAP * 2 - 3,
      y - 3 + box_size,
      box_colour,
      miniwin.pen_solid, 1)
   WindowLine (win, x - 4 + window_width - GAP * 2,
      y + 3,
      x - 1 + window_width - box_size - GAP * 2 + 3,
      y - 3 + box_size,
      box_colour,
      miniwin.pen_solid, 1)

   -- close configuration hotspot
   WindowAddHotspot(win, "close_box",
      x + window_width - box_size - GAP * 2,
      y,
      x + window_width - GAP * 2,
      y + box_size,
      "", "", "", "",
      "hyperlink_close",  -- mouseup
      "Click to close",
      miniwin.cursor_hand, 0)  -- hand cursor

   -- don't show again box
   WindowRectOp (win, miniwin.rect_fill,
      x + window_width - box_size - GAP * 2,
      window_height - box_size - GAP - line_height,
      x + window_width - GAP * 2,
      window_height - GAP - line_height,
      0x000000)
   WindowRectOp (win, miniwin.rect_frame,
      x + window_width - box_size - GAP * 2,
      window_height - box_size - GAP - line_height,
      x + window_width - GAP * 2,
      window_height - GAP - line_height,
      0xffffff)

   if showGreeting2 == 0 then
      WindowLine (win,
         x + window_width - box_size - GAP * 2 + 3,
         window_height - box_size - GAP + 7 - line_height,
         x + window_width - (box_size/2) - GAP * 2 ,
         window_height - GAP - 3 - line_height,
         0xffffff,
         miniwin.pen_solid, 1)
      WindowLine (win,
         x + window_width - (box_size/2) - GAP * 2 ,
         window_height - GAP - 3 - line_height,
         x + window_width - GAP * 2 - 3,
         window_height - GAP - box_size - line_height,
         0xffffff,
         miniwin.pen_solid, 1)
   end

   -- don't show again hotspot
   WindowAddHotspot(win, "dont_show_again_box",
      x + window_width - box_size - GAP * 2,
      window_height - box_size - GAP - line_height,
      x + window_width - GAP * 2,
      window_height - GAP - line_height,
      "", "", "", "",
      "hyperlink_dont_show",  -- mouseup
      "\nIf you don't check this box, you'll \nsee this message again next time.",
      miniwin.cursor_hand, 0)  -- hand cursor

   -- show the window
   WindowShow (win, true)

end -- ShowGreeting

function getmemoryusage()
  collectgarbage('collect')
  return collectgarbage('count')
end

]]>
</script>
</muclient>
